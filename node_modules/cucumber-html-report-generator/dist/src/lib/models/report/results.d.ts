import type { Metadata } from './feature';
import { Status } from './status';
export interface ModuleResults {
    _id?: any;
    passed: number;
    failed: number;
    undefined: number;
    skipped: number;
    pending: number;
    ambiguous: number;
    total: number;
    passedPercentage: string;
    failedPercentage: string;
    undefinedPercentage: string;
    skippedPercentage: string;
    pendingPercentage: string;
    ambiguousPercentage: string;
    status: Status;
    statusIcon?: string;
    time: string;
    timeInNanoSeconds: number;
}
export interface FeatureModuleResults extends ModuleResults {
    various: number;
    variousPercentage: string;
}
export interface OverviewResults {
    duration: number;
    durationHHMMSS: string;
}
export interface ReportResultsOverview extends OverviewResults {
    _id?: any;
    result: Result[];
    duration: number;
    durationHHMMSS: string;
    metadata?: Metadata[];
    date: Date;
    resultStatusesJoined: string;
}
export interface FeatureResultsOverview extends OverviewResults {
    result: Result[];
}
export interface ScenarioResultsOverview extends OverviewResults {
    status: Status;
    isFirstScenarioOutline?: boolean;
}
export interface StepResultsOverview extends OverviewResults {
    status: Status;
    error_message?: string;
    icon: string;
    title: string;
    color: string;
}
export interface FeatureResults {
    overview: FeatureResultsOverview;
    scenarios: ModuleResults;
    steps: ModuleResults;
}
export interface ScenarioResults {
    overview: ScenarioResultsOverview;
    before: OverviewResults;
    after: OverviewResults;
    steps: ModuleResults;
}
export interface ReportResults {
    overview: ReportResultsOverview;
    features: FeatureModuleResults;
    scenarios: ModuleResults;
    steps: ModuleResults;
}
export interface BeforeOrAfterOverviewResults extends OverviewResults {
    status: Status;
}
export interface BeforeOrAfterResults {
    overview: BeforeOrAfterOverviewResults;
}
export declare const featureModuleResultsInitializer: () => FeatureModuleResults;
export declare const moduleResultsInitializer: () => ModuleResults;
export declare const beforeOrAfterOverviewInitializer: () => OverviewResults;
export declare const overviewInitializer: () => ScenarioResultsOverview;
export declare const scenarioResultsInitializer: () => ScenarioResults;
export declare const featureResultsInitializer: () => FeatureResults;
export declare const reportResultsInitializer: () => ReportResults;
export interface Result {
    status: Status;
    icon: string;
}
//# sourceMappingURL=results.d.ts.map