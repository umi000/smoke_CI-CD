{"version":3,"file":"scenario-formatter.js","sourceRoot":"","sources":["../../../../../src/lib/generate-report/ReportObjectsFormatters/scenario-formatter.ts"],"names":[],"mappings":"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","sourcesContent":["import * as CommonFunctions from '../../common-functions/common-functions';\nimport * as ConsoleMessages from '../../helpers/console-messages';\nimport * as Models from '../../models/models';\nimport * as lodash from 'lodash';\nimport * as messages from '@cucumber/messages';\nimport { StepFormatter } from './step-formatter';\nimport IFeature = messages.Feature;\nimport Scenario = messages.Scenario;\nimport IStep = messages.Step;\nimport ITableRow = messages.TableRow;\nimport ITableCell = messages.TableCell;\n\nexport class ScenarioFormatter {\n  private readonly gherkinFeature: IFeature | null | undefined;\n\n  public constructor( gherkinFeature: IFeature | null | undefined ) {\n    this.gherkinFeature = gherkinFeature;\n  }\n\n  public parseScenario ( scenario: Models.Scenario, featureName: string ): Models.Scenario | null {\n    let localScenario = this.initializeScenario( scenario, featureName );\n    if ( localScenario ) {\n      localScenario = this.parseSteps( localScenario );\n      localScenario.results = this.updateScenarioResults( localScenario.results );\n    }\n    return localScenario;\n  }\n\n  public createNewFirstScenarioOutline (\n    jsonScenario: Models.Scenario,\n    gherkinScenario: Scenario,\n    jsonScenarios: Models.Scenario[],\n    scenarioIndex: number ): Models.Scenario {\n\n    const firstScenarioOutline: Models.Scenario = lodash.cloneDeep( jsonScenario );\n    firstScenarioOutline.id = `${firstScenarioOutline.id.substring( 0, firstScenarioOutline.id.length - 3 )};;1`;\n    firstScenarioOutline.name = CommonFunctions.escapeHTML( firstScenarioOutline.name );\n    firstScenarioOutline.before = <Models.BeforeOrAfter>{ steps: <Models.Step[]>[] };\n    firstScenarioOutline.after = <Models.BeforeOrAfter>{ steps: <Models.Step[]>[] };\n    firstScenarioOutline.results = Models.scenarioResultsInitializer();\n    firstScenarioOutline.steps = this.initializeScenarioOutlineSteps( firstScenarioOutline.steps!, gherkinScenario );\n    firstScenarioOutline.examples = this.initializeExamples( gherkinScenario, jsonScenarios );\n\n    firstScenarioOutline.examples.forEach( ( example, index, arr ) => {\n      if ( index < arr.length - 1 ) {\n        firstScenarioOutline.results.overview.duration += jsonScenarios[ scenarioIndex + index ].results.overview.duration;\n        firstScenarioOutline.results.steps.passed += jsonScenarios[ scenarioIndex + index ].results.steps.passed;\n        firstScenarioOutline.results.steps.failed += jsonScenarios[ scenarioIndex + index ].results.steps.failed;\n        firstScenarioOutline.results.steps.undefined += jsonScenarios[ scenarioIndex + index ].results.steps.undefined;\n        firstScenarioOutline.results.steps.pending += jsonScenarios[ scenarioIndex + index ].results.steps.pending;\n        firstScenarioOutline.results.steps.ambiguous += jsonScenarios[ scenarioIndex + index ].results.steps.ambiguous;\n        firstScenarioOutline.results.steps.skipped += jsonScenarios[ scenarioIndex + index ].results.steps.skipped;\n      }\n    } );\n\n    firstScenarioOutline.results.overview.durationHHMMSS = CommonFunctions.convertTimeFromNanoSecondsToHHMMSS(\n      firstScenarioOutline.results.overview.duration\n    );\n\n    firstScenarioOutline.isFirstScenarioOutline = true;\n    return firstScenarioOutline;\n  }\n\n  public isOutlineScenario ( scenario: Models.Scenario ): boolean {\n    if ( this.gherkinFeature?.children.some( scenarioFromFeature =>\n      scenarioFromFeature.scenario?.name === scenario.name\n      && scenarioFromFeature.scenario.examples.length\n      && scenarioFromFeature.scenario.steps.length ) ) {\n      return true;\n    }\n    return false;\n  }\n\n  private initializeExamples ( gherkinScenario: Scenario, jsonScenarios: Models.Scenario[] ): string[][] {\n    const examples = gherkinScenario.examples[ 0 ];\n    const headerRow = examples.tableHeader;\n    const examplesHeaderCells = headerRow?.cells.map( cell => cell.value ) !;\n    const examplesRows = examples.tableBody.map( row => {\n      if ( this.isRowExecuted( headerRow, row.cells, gherkinScenario.steps, jsonScenarios ) ) {\n        const rowContent: string[] = [];\n        ( row.cells ).forEach( cell => {\n          rowContent.push( cell.value );\n        } );\n        return rowContent;\n      }\n      return null;\n    } ).flatMap( row => row ? [ row ] : [] );\n    let rows = <string[][]>[];\n    rows.push( examplesHeaderCells );\n    rows = rows.concat( examplesRows );\n    return rows;\n  }\n\n  private initializeScenarioOutlineSteps ( steps: Models.Step[], gherkinScenario: Scenario ): Models.Step[]{\n    steps.forEach( ( stepJs: Models.Step ) => {\n      delete stepJs.text;\n      stepJs.rows = [];\n      delete stepJs.result.error_message;\n      stepJs.embeddings = [];\n      stepJs.attachments = [];\n      stepJs.result.status = Models.Status.passed;\n      ( gherkinScenario.steps ).map( stepPd => {\n        if ( ( stepPd.location ).line === stepJs.line ) {\n          stepJs.name = CommonFunctions.escapeHTML( String( stepPd.text ) );\n        }\n        return stepPd;\n      } );\n    } );\n    return steps;\n  }\n\n  private parseSteps ( scenario: Models.Scenario ): Models.Scenario {\n    scenario.steps?.map( step => {\n      const parsedStep = new StepFormatter().parseStep( step );\n      if ( parsedStep.keyword.trim() === 'Before' ) {\n        scenario.before?.steps.push( parsedStep );\n        scenario.before!.results = this.updateBeforeOrAfterStadistics( scenario.before!.results, parsedStep.result );\n        scenario.results.before.duration += parsedStep.result.duration;\n      }\n      if ( parsedStep.keyword.trim() === 'After' ) {\n        scenario.after?.steps.push( parsedStep );\n        scenario.after!.results = this.updateBeforeOrAfterStadistics( scenario.after!.results, parsedStep.result );\n        scenario.results.after.duration += parsedStep.result.duration;\n      }\n\n      scenario.results = this.updateScenarioStepsStadistics( scenario.results, parsedStep.result );\n\n      return parsedStep;\n    } );\n    scenario.steps = scenario.steps?.filter( step => step.keyword.trim() !== 'Before' && step.keyword.trim() !== 'After' );\n    return scenario;\n  }\n\n  private initializeScenario ( scenario: Models.Scenario, featureName: string ): Models.Scenario | null {\n    if ( typeof scenario.id === 'undefined' ) {\n      console.log( ConsoleMessages.scenarioWithoutIdRemoved( scenario.name, featureName ) );\n      return null;\n    }\n\n    if ( !scenario.steps?.length ) {\n      console.log( ConsoleMessages.scenarioWithoutStepsRemoved( scenario.name, featureName ) );\n      return null;\n    }\n\n    if ( this.isOutlineScenario( scenario ) ) {\n      scenario.keyword = 'Scenario Outline';\n    }\n    scenario.isFirstScenarioOutline = false;\n    scenario.examples = [];\n    scenario.keyword = typeof scenario.keyword === 'undefined' ? '' : scenario.keyword;\n    scenario.name = typeof scenario.name === 'undefined' ? '' : scenario.name;\n    scenario.type = typeof scenario.type === 'undefined' ? 'scenario' : scenario.type;\n    scenario.results = Models.scenarioResultsInitializer();\n    scenario.before = Models.beforeOrAfterInitializer();\n    scenario.after = Models.beforeOrAfterInitializer();\n    scenario.tags = typeof scenario.tags === 'undefined' ? [] : scenario.tags;\n    return scenario;\n  }\n\n  private updateBeforeOrAfterStadistics ( results: Models.BeforeOrAfterResults, stepResults: Models.StepResultsOverview ): Models.BeforeOrAfterResults {\n    results.overview.duration += stepResults.duration;\n    results.overview.status = stepResults.status === Models.Status.passed\n      ? results.overview.status\n      : stepResults.status;\n    return results;\n  }\n\n  private updateScenarioStepsStadistics ( results: Models.ScenarioResults, stepResults: Models.StepResultsOverview ): Models.ScenarioResults {\n    results.overview.duration += stepResults.duration ? stepResults.duration : 0;\n    results.overview.status = stepResults.status === Models.Status.failed ? results.overview.status : Models.Status.failed;\n\n    switch ( stepResults.status ) {\n    case Models.Status.passed:\n      results.steps.passed += 1;\n      break;\n    case Models.Status.failed:\n      results.steps.failed += 1;\n      break;\n    case Models.Status.ambiguous:\n      results.steps.ambiguous += 1;\n      break;\n    case Models.Status.pending:\n      results.steps.pending += 1;\n      break;\n    case Models.Status.skipped:\n      results.steps.skipped += 1;\n      break;\n    case Models.Status.undefined:\n      results.steps.undefined += 1;\n      break;\n      // no default\n    }\n\n    results.steps.total += 1;\n    return results;\n  }\n\n  private updateScenarioResults ( scenarioResults: Models.ScenarioResults ): Models.ScenarioResults {\n    scenarioResults.overview.durationHHMMSS = CommonFunctions.convertTimeFromNanoSecondsToHHMMSS( scenarioResults.overview.duration );\n    scenarioResults.before.durationHHMMSS = CommonFunctions.convertTimeFromNanoSecondsToHHMMSS( scenarioResults.before.duration );\n    scenarioResults.after.durationHHMMSS = CommonFunctions.convertTimeFromNanoSecondsToHHMMSS( scenarioResults.after.duration );\n    scenarioResults.steps = CommonFunctions.updatePercentages( scenarioResults.steps );\n    return scenarioResults;\n  }\n\n  private isRowExecuted ( tableHeader: ITableRow | undefined, cells: readonly ITableCell[], steps: readonly IStep[], jsonScenarios: Models.Scenario[] ): boolean {\n    const foundSteps = steps.filter( step => {\n      let stepText = step.text;\n      tableHeader?.cells.forEach( ( cell, index ) => {\n        stepText = stepText.replace( `<${cell.value}>`, ( ( cells[ index ] ).value ) );\n      } );\n      return jsonScenarios.some( scenario => scenario.steps?.some( jsonStep => jsonStep.name === stepText ) );\n    } ).length;\n    return foundSteps === steps.length;\n  }\n}\n"]}