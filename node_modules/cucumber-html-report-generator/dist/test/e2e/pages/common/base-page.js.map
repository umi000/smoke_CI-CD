{"version":3,"file":"base-page.js","sourceRoot":"","sources":["../../../../../test/e2e/pages/common/base-page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uGAAyF;AAEzF,MAAa,QAAQ;IAGnB,YAAoB,eAAwB;QAC1C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACzC,CAAC;IAEM,KAAK,CAAC,aAAa,CAAG,GAAW;QACtC,MAAM,OAAO,CAAC,GAAG,CAAE,GAAG,CAAE,CAAC;IAC3B,CAAC;IAEM,KAAK,CAAC,eAAe,CAAE,aAAqB;QACjD,CAAE,MAAM,IAAI,CAAC,WAAW,CAAE,aAAa,CAAE,CAAE,EAAE,KAAK,EAAE,CAAC;IACvD,CAAC;IAEM,KAAK,CAAC,WAAW,CAAG,KAAa;QACtC,MAAM,UAAU,GAAG,MAAM,CAAC,CAAE,IAAI,CAAC,eAAe,IAAI,EAAE,CAAE,CAAC;QACzD,OAAO,UAAU,CAAC,CAAC,CAAE,WAAW,KAAK,iBAAiB,CAAE,CAAC;IAC3D,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAG,aAAqB;QACpD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAE,aAAa,CAAE,CAAC;QACzD,MAAM,qBAAqB,GAAG,MAAM,QAAQ,EAAE,aAAa,EAAE,CAAC;QAC9D,OAAO,MAAM,qBAAqB,EAAE,YAAY,CAAE,OAAO,CAAE,KAAK,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC;IAC1G,CAAC;IAEM,KAAK,CAAC,mBAAmB,CAAE,UAAkB;QAClD,MAAM,eAAe,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;IAClD,CAAC;IAEM,gBAAgB;QACrB,OAAQ,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC;IAC5C,CAAC;CACF;AAjCD,4BAiCC","sourcesContent":["import * as CommonFunctions from '../../../../src/lib/common-functions/common-functions';\n\nexport class BasePage {\n  public mainObjectXpath: string | undefined;\n\n  public constructor( mainObjectXpath?: string ) {\n    this.mainObjectXpath = mainObjectXpath;\n  }\n\n  public async navigateToUrl ( url: string ): Promise<void> {\n    await browser.url( url );\n  }\n\n  public async clickOnCheckbox( checkboxLabel: string ): Promise<void>{\n    ( await this.getCheckBox( checkboxLabel ) )?.click();\n  }\n\n  public async getCheckBox ( label: string ): Promise<WebdriverIO.Element | undefined> {\n    const mainObject = await $( this.mainObjectXpath ?? '' );\n    return mainObject.$( `.//*[.='${label}']/../..//input` );\n  }\n\n  public async getCheckboxStatus ( checkboxLabel: string ): Promise<string> {\n    const checkbox = await this.getCheckBox( checkboxLabel );\n    const checkboxParentElement = await checkbox?.parentElement();\n    return await checkboxParentElement?.getAttribute( 'class' ) === 'checked' ? 'activated' : 'deactivated';\n  }\n\n  public async deleteFolderContent( folderPath: string ): Promise<void>{\n    await CommonFunctions.emptyFolder( folderPath );\n  }\n\n  public getConsoleErrors(): string[] | undefined{\n    return  browser.config.params?.consoleLog;\n  }\n}\n"]}