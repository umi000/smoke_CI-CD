{"version":3,"file":"feature-overview-steps.js","sourceRoot":"","sources":["../../../../../test/e2e/steps/report-generation/feature-overview-steps.ts"],"names":[],"mappings":";;;;;AAAA,iDAAgD;AAChD,+FAA0F;AAC1F,gDAAwB;AACxB,cAAI,CAAC,MAAM,EAAE,CAAC;AACd,uCAAqC;AACrC,MAAM,mBAAmB,GAAG,oBAAS,CAAC,OAAO,CAAE,2CAAmB,CAAE,CAAC;AAErE,IAAA,eAAI,EAAE,gFAAgF,EAAE,KAAK,EAAG,SAAiB,EAAE,MAAc,EAAG,EAAE;IACpI,MAAM,WAAW,GAAG,MAAM,mBAAmB,CAAC,gBAAgB,CAAE,SAAS,CAAE,CAAC;IAC5E,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAE,MAAM,KAAK,WAAW,CAAE,CAAC;AACxD,CAAC,CAAE,CAAC;AAEJ,IAAA,eAAI,EAAE,2EAA2E,EAAE,KAAK,EAAG,aAAqB,EAAG,EAAE;IACnH,MAAM,8BAA8B,GAAG,MAAM,mBAAmB,CAAC,0BAA0B,EAAE,CAAC;IAC9F,8BAA8B,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAE,aAAa,CAAE,CAAC;AACnE,CAAC,CAAE,CAAC;AAEJ,IAAA,eAAI,EAAE,iEAAiE,EAAE,KAAK,EAAG,SAAiB,EAAE,kBAA0B,EAAG,EAAE;IACjI,MAAM,aAAa,GAAG,MAAM,mBAAmB,CAAC,8BAA8B,CAAE,SAAS,CAAE,CAAC;IAC5F,aAAa,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAE,kBAAkB,CAAE,CAAC;AACvD,CAAC,CAAE,CAAC;AAEJ,IAAA,eAAI,EAAE,iDAAiD,EAAE,KAAK,EAAG,aAAqB,EAAG,EAAE;IACzF,MAAM,mBAAmB,CAAC,oBAAoB,CAAE,aAAa,CAAE,CAAC;AAClE,CAAC,CAAE,CAAC;AAEJ,IAAA,eAAI,EAAE,oHAAoH,EAAE,KAAK,EAAG,YAAoB,EAAE,SAAiB,EAAE,YAAoB,EAAG,EAAE;IACpM,MAAM,mBAAmB,CAAC,+BAA+B,CAAE,SAAS,EAAE,YAAY,EAAE,YAAY,CAAE,CAAC;AACrG,CAAC,CAAE,CAAC;AAEJ,IAAA,eAAI,EAAE,sHAAsH,EAAE,KAAK,EAAG,aAAqB,EAAE,SAAiB,EAAG,EAAE;IACjL,MAAM,mBAAmB,CAAC,8CAA8C,CAAE,aAAa,EAAE,SAAS,CAAE,CAAC;AACvG,CAAC,CAAE,CAAC;AAEJ,IAAA,eAAI,EAAE,qHAAqH,EAAE,KAAK,EAAG,UAAkB,EAAE,SAAiB,EAAE,YAAoB,EAAE,YAAoB,EAAG,EAAE;IACzN,MAAM,QAAQ,GAAG,MAAM,mBAAmB,CAAC,4BAA4B,CAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAE,CAAC;IAC/G,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAE,YAAY,CAAE,CAAC;AAC5C,CAAC,CAAE,CAAC","sourcesContent":["import { Then, When } from '@cucumber/cucumber';\nimport { FeatureOverviewPage } from '../../pages/report-generation/feature-overview-page';\nimport chai from 'chai';\nchai.should();\nimport { container } from 'tsyringe';\nconst featureOverviewPage = container.resolve( FeatureOverviewPage );\n\nThen( /^The '(.*)' graph is '(displayed|not displayed)' in the feature-overview page$/, async ( graphName: string, status: string ) =>{\n  const graphStatus = await featureOverviewPage.isGraphDisplayed( graphName );\n  graphStatus.should.be.equal( status === 'displayed' );\n} );\n\nThen( /^The additional data header title is '(.*)' in the feature-overview page$/, async ( expectedTitle: string ) =>{\n  const applicationAdditionalDataTitle = await featureOverviewPage.getAdditionalDataTitleText();\n  applicationAdditionalDataTitle?.should.be.equal( expectedTitle );\n} );\n\nThen( /^The '(.*)' field value is '(.*)' in the feature-overview page$/, async ( fieldName: string, expectedFieldValue: string ) =>{\n  const appFieldValue = await featureOverviewPage.getAdditionalDataPropertyValue( fieldName );\n  appFieldValue?.should.be.equal( expectedFieldValue );\n} );\n\nWhen( /^The user clicks on the scenario title: '(.*)'$/, async ( scenarioTitle: string ) =>{\n  await featureOverviewPage.clickOnScenarioTitle( scenarioTitle );\n} );\n\nWhen( /^The user clicks on the cell '(.*)' of the row '(.*)' at the scenario outline '(.*)' in the feature-overview page$/, async ( columnNumber: number, rowNumber: number, scenarioName: string ) =>{\n  await featureOverviewPage.clickOnScenarioOutlineTableCell( rowNumber, columnNumber, scenarioName );\n} );\n\nWhen( /^The user clicks on the scenario title '(.*)' at the row '(.*)' in the scenarios table in the feature-overview page$/, async ( scenarioTitle: string, rowNumber: string ) =>{\n  await featureOverviewPage.clickOnScenarioTitleInScenariosOutlineTableRow( scenarioTitle, rowNumber );\n} );\n\nThen( /^The step '(.*)' in the row '(.*)' of the scenario outline '(.*)' has the text '(.*)' in the feature-overview page$/, async ( stepNumber: string, rowNumber: string, scenarioNane: string, expectedText: string ) =>{\n  const stepText = await featureOverviewPage.getStepTextInScenarioOutline( scenarioNane, rowNumber, stepNumber );\n  stepText?.should.be.equal( expectedText );\n} );\n"]}