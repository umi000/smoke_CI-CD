{"version":3,"file":"generate-report-spec.js","sourceRoot":"","sources":["../../../test/unit/generate-report-spec.ts"],"names":[],"mappings":"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","sourcesContent":["import * as CommonFunctions from '../../src/lib/common-functions/common-functions';\nimport type * as Models from '../../src/lib/models/models';\nimport * as fs from 'fs';\nimport * as fse from 'fs-extra';\nimport * as generateReport from '../../src/lib/generate-report/generate-report';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { expect, use } from 'chai';\nimport Chaifs from 'chai-fs';\nimport axios from 'axios';\nimport sinon from 'sinon';\n\nuse( Chaifs );\n\nconst readDirAsync = fs.promises.readdir;\nconst statAsync = fs.promises.stat;\n\ndescribe( 'GenerateReport.ts', () => {\n  const getReportPathInTempFolder = async (): Promise<string> => {\n    const tempDir = path.join( os.tmpdir(), 'cucumber-html-report-generator/' );\n    const foldersInTempDir = await readDirAsync( tempDir );\n\n    const stats = await Promise.all(\n      foldersInTempDir.map( async ( folder: string ) => {\n        const stat = await statAsync( path.join( tempDir, folder ) );\n        return { folder: tempDir + folder, stat };\n      } )\n    );\n\n    return stats.sort( ( firstStats: { folder: string; stat: fs.Stats }, secondStats: { readonly folder: string; stat: fs.Stats } ) =>\n      secondStats.stat.mtime.getTime() - firstStats.stat.mtime.getTime() )[0].folder;\n  };\n\n  describe( 'Happy flows', () => {\n    it( 'should create a report from the merged json files with metadata', async () => {\n      // Given\n      const reportPath = `${path.resolve( './' )}/.tmp/unit/report01`;\n      await CommonFunctions.emptyFolder( reportPath );\n      const featuresFolder = path.resolve( reportPath, 'features/' );\n      await fse.mkdir( featuresFolder );\n\n      const options: Models.ReportGeneration = {\n        openReportInBrowser: false,\n        reportPath,\n        showExecutionTime: true,\n        customStyle: `${path.resolve( './' )}/src/resources/templates/css/style-dark-theme.css`,\n        useCDN: false,\n        featuresFolder: `${path.resolve( './' )}/test/unit/data/features/correct/`,\n        jsonDir: `${path.resolve( './' )}/test/unit/data/cucumber-report-jsons/`,\n        saveCollectedJSON: true,\n        saveEnrichedJSON: true,\n        saveReportInMongoDb: false,\n        reportMetadataTitle: 'Additional Data',\n        reportMetadata: [\n          { name: 'Project', value: 'custom project' },\n          { name: 'Release', value: '1.2.3' },\n          { name: 'Cycle', value: '2' },\n          { name: 'Execution Start Date', value: '2021-03-26 14:01' },\n          { name: 'Execution End Date', value: '2021-03-26 16:05' }\n        ]\n      };\n\n      // When\n      await generateReport.generate( options );\n\n      // Then\n      expect( await fse.pathExists( path.join( reportPath, 'index.html' ) ) ).to.equal( true );\n      expect( await fse.pathExists( path.join( reportPath, 'merged-output.json' ) ) ).to.equal( true );\n      expect( await fse.pathExists( path.join( reportPath, 'enriched-output.json' ) ) ).to.equal( true );\n    } );\n\n    it( 'should create a report from the merged json files without metadata', async () => {\n      // Given\n      const options: Models.ReportGeneration = {\n        disableLog: true,\n        navigateToFeatureIfThereIsOnlyOne: true,\n        showExecutionTime: false,\n        overrideStyle: `${path.resolve( './' )}/src/resources/templates/css/style-dark-theme.css`,\n        theme: 'Light',\n        useCDN: true,\n        saveEnrichedJSON: false,\n        jsonDir: `${path.resolve( './' )}/test/unit/data/no-metadata-jsons`\n      };\n\n      // When\n      await generateReport.generate( options );\n\n      // Then\n      const reportPath = await getReportPathInTempFolder();\n      expect( ( path.join( reportPath, 'index.html' ) ) ).to.be.a.file();\n      sinon.restore();\n    } );\n    it( 'should create a report from a json file without parameters', async () => {\n      // Given\n      const jsonFile = path.resolve( path.resolve( './' ), './test/unit/data/enriched-joined-cucumber-jsons/enriched-output1.json' );\n      const reportSaved = ( await CommonFunctions.readJsonFile( jsonFile ) );\n\n      // When\n      await generateReport.generateHtmlReport( undefined, <Models.ExtendedReport>reportSaved );\n\n      // Then\n      const reportPath = await getReportPathInTempFolder();\n      expect( ( path.join( reportPath, 'index.html' ) ) ).to.be.a.file();\n    } );\n    it( 'should call to insertReport api', async () => {\n      // Given\n      const options: Models.ReportGeneration = {\n        disableLog: true,\n        navigateToFeatureIfThereIsOnlyOne: false,\n        openReportInBrowser: false,\n        showExecutionTime: false,\n        reportTitle: 'New report',\n        theme: 'Light',\n        useCDN: true,\n        saveEnrichedJSON: false,\n        saveReportInMongoDb: true,\n        mongooseServerUrl: 'http://localhost:3000',\n        jsonDir: `${path.resolve( './' )}/test/unit/data/cucumber-report-jsons`\n      };\n\n      // When\n      const spy = sinon.stub( axios, 'request' ).resolves( Promise.resolve( { data: { reportId: '609c40e971b5b53a1965cec1' } } ) );\n      await generateReport.generate( options );\n\n      // Then\n      expect( spy.called );\n      expect( await generateReport.generate( options ) ).equal( '609c40e971b5b53a1965cec1' );\n      sinon.restore();\n    } );\n  } );\n\n  describe( 'failures', () => {\n    it( 'should throw an error when no options are provided', async () => {\n      // Given\n      const options: Models.ReportGeneration | null = null;\n\n      // When\n      await generateReport.generate( options ).catch( ( error: Error ) => {\n        // Then\n        expect( error.message ).to.equal( 'Options need to be provided.' );\n      } );\n    } );\n\n    it( 'should throw an error when the json dir si not provided', async () => {\n      // Given\n      const reportPath = `${path.resolve( './' )}/.tmp/unit/reports/report02/`;\n      const options: Models.ReportGeneration = {\n        reportPath,\n        jsonDir: '',\n        reportMetadata: [\n          { name: 'browser', value: 'chrome 81' }\n        ],\n        saveEnrichedJSON: false,\n        saveReportInMongoDb: true\n      };\n\n      // When\n      await generateReport.generate( options ).catch( ( error: Error ) => {\n        // Then\n        expect( error.message ).to.equal( `The path provided: '${options.jsonDir}' is invalid` );\n      } );\n    } );\n\n    it( 'should throw an error when the report folder is invalid', async () => {\n      // Given\n      const reportPath = '/home/user1/test/test2';\n      const options: Models.ReportGeneration = {\n        disableLog: true,\n        navigateToFeatureIfThereIsOnlyOne: false,\n        reportPath,\n        jsonDir: `${path.resolve( './' )}/test/unit/data/cucumber-report-jsons`,\n        reportMetadata: [\n          { name: 'browser', value: 'chrome 81' }\n        ],\n      };\n\n      // When\n      await generateReport.generate( options ).catch( ( error: Error ) => {\n        // Then\n        expect( error.message ).to.equal( `The path provided: '${options.reportPath!}' is invalid` );\n      } );\n    } );\n\n    it( 'should throw an error when the features folder is invalid', async () => {\n      // Given\n      const featuresFolder = '/home/user1/test/test2';\n      const options: Models.ReportGeneration = {\n        disableLog: true,\n        navigateToFeatureIfThereIsOnlyOne: false,\n        featuresFolder,\n        jsonDir: `${path.resolve( './' )}/test/unit/data/cucumber-report-jsons`,\n        reportMetadata: [\n          { name: 'browser', value: 'chrome 81' }\n        ],\n      };\n\n      // When\n      await generateReport.generate( options ).catch( ( error: Error ) => {\n        // Then\n        expect( error.message ).to.equal( `The path provided: '${options.featuresFolder!}' is invalid` );\n      } );\n    } );\n    it( 'should throw an error when the json folder does not exist', async () => {\n      // Given\n      const options: Models.ReportGeneration = {\n        disableLog: true,\n        navigateToFeatureIfThereIsOnlyOne: false,\n        jsonDir: './invalid-folder',\n        reportMetadata: [\n          { name: 'browser', value: 'chrome 81' }\n        ],\n      };\n\n      // When\n      await generateReport.generate( options ).catch( ( error: Error ) => {\n        // Then\n        expect( error.message ).to.equal( `The path provided: '${options.jsonDir}' is invalid` );\n      } );\n    } );\n  } );\n} );\n"]}