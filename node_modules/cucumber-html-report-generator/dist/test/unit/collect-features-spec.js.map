{"version":3,"file":"collect-features-spec.js","sourceRoot":"","sources":["../../../test/unit/collect-features-spec.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as Models from '../../src/lib/models/models';\nimport * as chai from 'chai';\nimport * as path from 'path';\nimport { describe, it } from 'mocha';\nimport { CollectFeatureFiles } from '../../src/lib/feature-collector/feature-collector';\nimport chaiAsPromised from 'chai-as-promised';\nimport sinonChai from 'sinon-chai';\n\nconst { expect } = chai;\nchai.use( sinonChai );\nchai.use( chaiAsPromised );\nchai.use( sinonChai );\n\ndescribe( 'CollectFeatures.ts', () => {\n  describe( 'Happy flows', () => {\n    it( 'should return an output from folder with features', async () => {\n      // Given\n      const reportGenerationProperties: Models.ReportGeneration = {\n        featuresFolder: path.resolve( process.cwd(), './test/unit/data/features/correct' ),\n        jsonDir: ''\n      };\n\n      const collectFeatures = new CollectFeatureFiles( reportGenerationProperties );\n\n      // When\n      const collectedFeatures = await collectFeatures.collectFeatures();\n\n      // Then\n      expect( collectedFeatures?.length ).to.be.equal( 3 );\n    } );\n  } );\n  describe( 'failures', () => {\n    it( 'should not return an output if it does not find features', async () => {\n      // Given\n      const reportGenerationProperties: Models.ReportGeneration = {\n        featuresFolder: path.resolve( process.cwd(), './test/unit/data/cucumber-report-jsons' ),\n        jsonDir: ''\n      };\n      const collectFeatures = new CollectFeatureFiles( reportGenerationProperties );\n\n      // When\n      const collectedFeatures = await collectFeatures.collectFeatures();\n\n      // Then\n      expect( collectedFeatures ).to.be.equal( null );\n    } );\n    it( 'should not return an output with a null folder', async () => {\n      // Given\n      const reportGenerationProperties: Models.ReportGeneration = {\n        jsonDir: ''\n      };\n      const collectFeatures = new CollectFeatureFiles( reportGenerationProperties );\n\n      // When\n      await collectFeatures.collectFeatures().catch( ( error: Error ) => {\n        // Then\n        expect( error.message ).equal( \"ENOENT: no such file or directory, stat 'null'\" );\n      } );\n    } );\n\n    it( 'should return a null with an undefined folder', async () => {\n      // Given\n      const reportGenerationProperties: Models.ReportGeneration = {\n        jsonDir: '',\n      };\n      const collectFeatures = new CollectFeatureFiles( reportGenerationProperties );\n\n      // When\n      const result = await collectFeatures.collectFeatures();\n\n      // Then\n      expect( result?.length ).to.equal( 0 );\n    } );\n\n    it( 'should not return the features with the examples label written twice', async () => {\n      // Given\n      const reportGenerationProperties: Models.ReportGeneration = {\n        featuresFolder: path.resolve( process.cwd(), './test/unit/data/features//with failures/with-label-written-twice' ),\n        jsonDir: ''\n      };\n      const collectFeatures = new CollectFeatureFiles( reportGenerationProperties );\n\n      // When\n      const collectedFeatures = await collectFeatures.collectFeatures();\n\n      // Then\n      expect( collectedFeatures?.length ).to.equal( 1 );\n    } );\n  } );\n} );\n"]}